import { Button, VerticalBox, HorizontalBox, SpinBox } from "std-widgets.slint";

export component AppWindow inherits Window {
  in property <image> canvas_source <=> canvas.source;
  in property <image> canvas_buffer_source <=> canvas_buf.source;
  out property <int> brush_value <=> brush_box.value;
  callback mouse_event(PointerEvent, length, length, bool);
  callback select_freehand();
  callback select_line();
  callback select_rect();
  callback select_circle();

  VerticalBox {
    HorizontalBox {
      btn_freehand := Button {
        checked: true;
        checkable: true;
        text: "Freehand";
        clicked => {
          if (self.checked) {
            btn_line.checked = false;
            btn_rect.checked = false;
            btn_circle.checked = false;
            root.select_freehand();
          } else {
            self.checked = true;
          }
        }
      }
      btn_line := Button {
        checkable: true;
        text: "Line";
        clicked => {
          if (self.checked) {
            btn_freehand.checked = false;
            btn_rect.checked = false;
            btn_circle.checked = false;
            root.select_line();
          } else {
            self.checked = true;
          }
        }
      }
      btn_rect := Button {
        checkable: true;
        text: "Rectangle";
        clicked => {
          if (self.checked) {
            btn_freehand.checked = false;
            btn_line.checked = false;
            btn_circle.checked = false;
            root.select_rect();
          } else {
            self.checked = true;
          }
        }
      }
      btn_circle := Button {
        checkable: true;
        text: "Circle";
        clicked => {
          if (self.checked) {
            btn_freehand.checked = false;
            btn_line.checked = false;
            btn_rect.checked = false;
            root.select_circle();
          } else {
            self.checked = true;
          }
        }
      }
      brush_box := SpinBox {
        minimum: 1.0;
        maximum: 10.0;
        value: 1.0;
      }
    }
    canvas_rect := TouchArea {
      width: 500px;
      height: 500px;
      pointer-event(PointerEvent) => {
        root.mouse_event(PointerEvent, self.mouse-x, self.mouse-y, self.pressed)
      }
      canvas := Image { }
      canvas_buf := Image { }
    }
  }
}
