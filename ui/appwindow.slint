import { Button, VerticalBox, HorizontalBox, SpinBox } from "std-widgets.slint";
import { PaintCanvas } from "paint_canvas.slint";

export component AppWindow inherits Window {
  in property <image> canvas_source <=> canvas.canvas;
  in property <image> canvas_buffer_source <=> canvas.canvas_preview;
  out property <int> brush_value <=> brush_box.value;
  private property <bool> ctrl_pressed;
  callback mouse_event(PointerEvent, length, length, bool);
  callback spin_box_edited(int);
  callback select_freehand();
  callback select_line();
  callback select_rect();
  callback select_circle();
  callback undo();
  callback redo();
  callback clear();
  forward-focus: key-handler;

  key-handler := FocusScope {
    key-pressed(event) => {
      if (event.modifiers.control && !ctrl_pressed) {
        ctrl_pressed = true;
      }
      if (ctrl_pressed && event.text == "z") {
        undo();
      }
      if (ctrl_pressed && event.text == "y") {
        redo();
      }
      accept
    }
    key-released(event) => {
      if (event.modifiers.control) {
        ctrl_pressed = false;
      }
      accept
    }
    VerticalBox {
      HorizontalBox {
        btn_freehand := Button {
          checked: true;
          checkable: true;
          text: "Freehand";
          clicked => {
            if (self.checked) {
              btn_line.checked = false;
              btn_rect.checked = false;
              btn_circle.checked = false;
              root.select_freehand();
            } else {
              self.checked = true;
            }
          }
        }
        btn_line := Button {
          checkable: true;
          text: "Line";
          clicked => {
            if (self.checked) {
              btn_freehand.checked = false;
              btn_rect.checked = false;
              btn_circle.checked = false;
              root.select_line();
            } else {
              self.checked = true;
            }
          }
        }
        btn_rect := Button {
          checkable: true;
          text: "Rectangle";
          clicked => {
            if (self.checked) {
              btn_freehand.checked = false;
              btn_line.checked = false;
              btn_circle.checked = false;
              root.select_rect();
            } else {
              self.checked = true;
            }
          }
        }
        btn_circle := Button {
          checkable: true;
          text: "Circle";
          clicked => {
            if (self.checked) {
              btn_freehand.checked = false;
              btn_line.checked = false;
              btn_rect.checked = false;
              root.select_circle();
            } else {
              self.checked = true;
            }
          }
        }
        brush_box := SpinBox {
          minimum: 1.0;
          maximum: 10.0;
          value: 1.0;

          edited(value) => {
            root.spin_box_edited(value);
          }
        }

        Button {
          text: "Clear";
          clicked => {
            root.clear();
          }
        }
      }
      canvas := PaintCanvas {
        pointer-event(PointerEvent) => {
          root.mouse_event(PointerEvent, self.mouse-x, self.mouse-y, self.pressed)
        }
      }
    }
  }
}
